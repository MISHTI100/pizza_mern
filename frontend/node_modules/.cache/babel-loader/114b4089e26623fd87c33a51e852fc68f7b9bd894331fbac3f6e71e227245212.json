{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LAPZONE\\\\pizza-delivery-app\\\\frontend\\\\src\\\\pages\\\\Checkout.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport api from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Checkout({\n  cart,\n  user,\n  setCart\n}) {\n  _s();\n  const navigate = useNavigate();\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\n  const totalPrice = cart.reduce((total, pizza) => {\n    const price = pizza.price || 0;\n    return total + price * pizza.quantity;\n  }, 0);\n  const handlePlaceOrder = async () => {\n    if (!user) {\n      toast.error(\"You must be logged in to place an order.\");\n      navigate(\"/login\");\n      return;\n    }\n    if (cart.length === 0) {\n      toast.error(\"Your cart is empty.\");\n      return;\n    }\n    if (!paymentMethod) {\n      toast.error(\"Please select a payment method.\");\n      return;\n    }\n    try {\n      // --- Step 1: Simulate Payment ---\n      const {\n        data: paymentRes\n      } = await api.post(\"/payment/pay\", {\n        amount: totalPrice,\n        method: paymentMethod\n      });\n      if (!paymentRes.success) {\n        toast.error(\"Payment failed. Please try again.\");\n        return;\n      }\n\n      // --- Step 2: Place Order if payment is successful ---\n      const orderDetails = {\n        userId: user.user.id,\n        pizzas: cart.map(item => ({\n          pizzaId: !item.isCustom ? item._id : null,\n          name: item.name,\n          price: item.price,\n          quantity: item.quantity,\n          size: !item.isCustom ? item.size : undefined,\n          base: item.isCustom ? item.base : undefined,\n          sauce: item.isCustom ? item.sauce : undefined,\n          isCustom: !!item.isCustom\n        })),\n        totalAmount: totalPrice,\n        paymentMethod: paymentMethod,\n        transactionId: paymentRes.transactionId // Save dummy transaction ID\n      };\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      await api.post(\"/orders\", orderDetails, config);\n      toast.success(paymentRes.message);\n      setCart([]); // Clear the cart\n      navigate(\"/my-orders\");\n    } catch (error) {\n      toast.error(\"Failed to place order. Please try again.\");\n      console.error(\"Order placement error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      maxWidth: \"600px\",\n      margin: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Checkout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Order Summary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), cart.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        borderBottom: \"1px solid #eee\",\n        padding: \"10px 0\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [item.name, \" (x\", item.quantity, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\u20B9\", ((item.price || 0) * item.quantity).toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, item.cartId || index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        textAlign: \"right\",\n        marginTop: \"1rem\"\n      },\n      children: [\"Total: \\u20B9\", totalPrice.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: \"Select Payment Method\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"15px\"\n      },\n      children: [\"Cash on Delivery\", \"UPI\", \"Google Pay\", \"Debit/Credit Card\"].map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: \"block\",\n          margin: \"8px 0\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"payment\",\n          value: option,\n          checked: paymentMethod === option,\n          onChange: e => setPaymentMethod(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this), \" \", option]\n      }, option, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePlaceOrder,\n      style: {\n        marginTop: \"1rem\",\n        width: \"100%\",\n        padding: \"15px\",\n        backgroundColor: \"#007bff\",\n        color: \"white\",\n        border: \"none\",\n        borderRadius: \"5px\",\n        cursor: \"pointer\",\n        fontSize: \"16px\"\n      },\n      children: \"Confirm and Place Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(Checkout, \"KvDz0i+o7tBjC1V81GGQm4h3io8=\", false, function () {\n  return [useNavigate];\n});\n_c = Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["React","useState","useNavigate","toast","api","jsxDEV","_jsxDEV","Checkout","cart","user","setCart","_s","navigate","paymentMethod","setPaymentMethod","totalPrice","reduce","total","pizza","price","quantity","handlePlaceOrder","error","length","data","paymentRes","post","amount","method","success","orderDetails","userId","id","pizzas","map","item","pizzaId","isCustom","_id","name","size","undefined","base","sauce","totalAmount","transactionId","config","headers","Authorization","token","message","console","style","padding","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","index","display","justifyContent","borderBottom","toFixed","cartId","textAlign","marginTop","marginBottom","option","type","value","checked","onChange","e","target","onClick","width","backgroundColor","color","border","borderRadius","cursor","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/LAPZONE/pizza-delivery-app/frontend/src/pages/Checkout.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport api from \"../api\";\r\n\r\nexport default function Checkout({ cart, user, setCart }) {\r\n  const navigate = useNavigate();\r\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\r\n\r\n  const totalPrice = cart.reduce((total, pizza) => {\r\n    const price = pizza.price || 0;\r\n    return total + price * pizza.quantity;\r\n  }, 0);\r\n\r\n  const handlePlaceOrder = async () => {\r\n    if (!user) {\r\n      toast.error(\"You must be logged in to place an order.\");\r\n      navigate(\"/login\");\r\n      return;\r\n    }\r\n\r\n    if (cart.length === 0) {\r\n      toast.error(\"Your cart is empty.\");\r\n      return;\r\n    }\r\n\r\n    if (!paymentMethod) {\r\n      toast.error(\"Please select a payment method.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // --- Step 1: Simulate Payment ---\r\n      const { data: paymentRes } = await api.post(\"/payment/pay\", {\r\n        amount: totalPrice,\r\n        method: paymentMethod,\r\n      });\r\n\r\n      if (!paymentRes.success) {\r\n        toast.error(\"Payment failed. Please try again.\");\r\n        return;\r\n      }\r\n\r\n      // --- Step 2: Place Order if payment is successful ---\r\n      const orderDetails = {\r\n        userId: user.user.id,\r\n        pizzas: cart.map((item) => ({\r\n          pizzaId: !item.isCustom ? item._id : null,\r\n          name: item.name,\r\n          price: item.price,\r\n          quantity: item.quantity,\r\n          size: !item.isCustom ? item.size : undefined,\r\n          base: item.isCustom ? item.base : undefined,\r\n          sauce: item.isCustom ? item.sauce : undefined,\r\n          isCustom: !!item.isCustom,\r\n        })),\r\n        totalAmount: totalPrice,\r\n        paymentMethod: paymentMethod,\r\n        transactionId: paymentRes.transactionId, // Save dummy transaction ID\r\n      };\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      await api.post(\"/orders\", orderDetails, config);\r\n\r\n      toast.success(paymentRes.message);\r\n      setCart([]); // Clear the cart\r\n      navigate(\"/my-orders\");\r\n    } catch (error) {\r\n      toast.error(\"Failed to place order. Please try again.\");\r\n      console.error(\"Order placement error:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\", maxWidth: \"600px\", margin: \"auto\" }}>\r\n      <h1>Checkout</h1>\r\n      <h2>Order Summary</h2>\r\n\r\n      {cart.map((item, index) => (\r\n        <div\r\n          key={item.cartId || index}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            borderBottom: \"1px solid #eee\",\r\n            padding: \"10px 0\",\r\n          }}\r\n        >\r\n          <span>\r\n            {item.name} (x{item.quantity})\r\n          </span>\r\n          <span>₹{((item.price || 0) * item.quantity).toFixed(2)}</span>\r\n        </div>\r\n      ))}\r\n\r\n      <h3 style={{ textAlign: \"right\", marginTop: \"1rem\" }}>\r\n        Total: ₹{totalPrice.toFixed(2)}\r\n      </h3>\r\n\r\n      {/* --- Payment Method Selection --- */}\r\n      <h2 style={{ marginTop: \"20px\" }}>Select Payment Method</h2>\r\n      <div style={{ marginBottom: \"15px\" }}>\r\n        {[\"Cash on Delivery\", \"UPI\", \"Google Pay\", \"Debit/Credit Card\"].map(\r\n          (option) => (\r\n            <label key={option} style={{ display: \"block\", margin: \"8px 0\" }}>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"payment\"\r\n                value={option}\r\n                checked={paymentMethod === option}\r\n                onChange={(e) => setPaymentMethod(e.target.value)}\r\n              />{\" \"}\r\n              {option}\r\n            </label>\r\n          )\r\n        )}\r\n      </div>\r\n\r\n      <button\r\n        onClick={handlePlaceOrder}\r\n        style={{\r\n          marginTop: \"1rem\",\r\n          width: \"100%\",\r\n          padding: \"15px\",\r\n          backgroundColor: \"#007bff\",\r\n          color: \"white\",\r\n          border: \"none\",\r\n          borderRadius: \"5px\",\r\n          cursor: \"pointer\",\r\n          fontSize: \"16px\",\r\n        }}\r\n      >\r\n        Confirm and Place Order\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}