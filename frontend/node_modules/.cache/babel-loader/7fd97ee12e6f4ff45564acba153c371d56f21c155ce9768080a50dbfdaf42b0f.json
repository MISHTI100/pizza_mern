{"ast":null,"code":"import React,{useState}from'react';import api from'../api';import{toast}from'react-toastify';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function ForgotPassword(){const[email,setEmail]=useState('');const[loading,setLoading]=useState(false);const handleSubmit=async e=>{e.preventDefault();setLoading(true);try{const{data}=await api.post('/auth/forgot-password',{email});toast.info(data.message);}catch(error){// Still show a generic message to prevent email enumeration\ntoast.info('If an account with that email exists, a reset link has been sent.');}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',maxWidth:'400px',margin:'auto'},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Forgot Password\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Enter your email address and we will send you a link to reset your password.\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'1rem'},children:[/*#__PURE__*/_jsx(\"label\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:email,onChange:e=>setEmail(e.target.value),required:true,style:{width:'100%',padding:'8px'}})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,style:{width:'100%',padding:'10px',backgroundColor:'#007bff',color:'white',border:'none',borderRadius:'5px',cursor:'pointer'},children:loading?'Sending...':'Send Reset Link'})]})]});}","map":{"version":3,"names":["React","useState","api","toast","jsx","_jsx","jsxs","_jsxs","ForgotPassword","email","setEmail","loading","setLoading","handleSubmit","e","preventDefault","data","post","info","message","error","style","padding","maxWidth","margin","children","onSubmit","marginBottom","type","value","onChange","target","required","width","disabled","backgroundColor","color","border","borderRadius","cursor"],"sources":["C:/Users/LAPZONE/pizza-delivery-app/frontend/src/pages/ForgotPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport api from '../api';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function ForgotPassword() {\r\n  const [email, setEmail] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      const { data } = await api.post('/auth/forgot-password', { email });\r\n      toast.info(data.message);\r\n    } catch (error) {\r\n      // Still show a generic message to prevent email enumeration\r\n      toast.info('If an account with that email exists, a reset link has been sent.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px', maxWidth: '400px', margin: 'auto' }}>\r\n      <h1>Forgot Password</h1>\r\n      <p>Enter your email address and we will send you a link to reset your password.</p>\r\n      <form onSubmit={handleSubmit}>\r\n        <div style={{ marginBottom: '1rem' }}>\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n            style={{ width: '100%', padding: '8px' }}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" disabled={loading} style={{ width: '100%', padding: '10px', backgroundColor: '#007bff', color: 'white', border: 'none', borderRadius: '5px', cursor: 'pointer' }}>\r\n          {loading ? 'Sending...' : 'Send Reset Link'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,GAAG,KAAM,QAAQ,CACxB,OAASC,KAAK,KAAQ,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvC,cAAe,SAAS,CAAAC,cAAcA,CAAA,CAAG,CACvC,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACU,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAC,KAAK,CAAC,CAE7C,KAAM,CAAAY,YAAY,CAAG,KAAO,CAAAC,CAAC,EAAK,CAChCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClBH,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,CACF,KAAM,CAAEI,IAAK,CAAC,CAAG,KAAM,CAAAd,GAAG,CAACe,IAAI,CAAC,uBAAuB,CAAE,CAAER,KAAM,CAAC,CAAC,CACnEN,KAAK,CAACe,IAAI,CAACF,IAAI,CAACG,OAAO,CAAC,CAC1B,CAAE,MAAOC,KAAK,CAAE,CACd;AACAjB,KAAK,CAACe,IAAI,CAAC,mEAAmE,CAAC,CACjF,CAAC,OAAS,CACRN,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,mBACEL,KAAA,QAAKc,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,QAAQ,CAAE,OAAO,CAAEC,MAAM,CAAE,MAAO,CAAE,CAAAC,QAAA,eACjEpB,IAAA,OAAAoB,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxBpB,IAAA,MAAAoB,QAAA,CAAG,8EAA4E,CAAG,CAAC,cACnFlB,KAAA,SAAMmB,QAAQ,CAAEb,YAAa,CAAAY,QAAA,eAC3BlB,KAAA,QAAKc,KAAK,CAAE,CAAEM,YAAY,CAAE,MAAO,CAAE,CAAAF,QAAA,eACnCpB,IAAA,UAAAoB,QAAA,CAAO,OAAK,CAAO,CAAC,cACpBpB,IAAA,UACEuB,IAAI,CAAC,OAAO,CACZC,KAAK,CAAEpB,KAAM,CACbqB,QAAQ,CAAGhB,CAAC,EAAKJ,QAAQ,CAACI,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE,CAC1CG,QAAQ,MACRX,KAAK,CAAE,CAAEY,KAAK,CAAE,MAAM,CAAEX,OAAO,CAAE,KAAM,CAAE,CAC1C,CAAC,EACC,CAAC,cACNjB,IAAA,WAAQuB,IAAI,CAAC,QAAQ,CAACM,QAAQ,CAAEvB,OAAQ,CAACU,KAAK,CAAE,CAAEY,KAAK,CAAE,MAAM,CAAEX,OAAO,CAAE,MAAM,CAAEa,eAAe,CAAE,SAAS,CAAEC,KAAK,CAAE,OAAO,CAAEC,MAAM,CAAE,MAAM,CAAEC,YAAY,CAAE,KAAK,CAAEC,MAAM,CAAE,SAAU,CAAE,CAAAd,QAAA,CACpLd,OAAO,CAAG,YAAY,CAAG,iBAAiB,CACrC,CAAC,EACL,CAAC,EACJ,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}