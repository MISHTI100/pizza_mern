{"ast":null,"code":"import React,{useState,useEffect}from'react';import api from'../api';import{toast}from'react-toastify';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AdminDashboard=_ref=>{let{user}=_ref;const[orders,setOrders]=useState([]);const[loading,setLoading]=useState(true);const fetchAllOrders=async()=>{setLoading(true);try{const config={headers:{Authorization:`Bearer ${user.token}`}};const{data}=await api.get('/orders',config);setOrders(data);}catch(error){var _error$response,_error$response$data;toast.error(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Could not fetch orders.');}finally{setLoading(false);}};useEffect(()=>{if(user&&user.user.role==='admin'){fetchAllOrders();}},[user]);const handleStatusChange=async(orderId,newStatus)=>{try{const config={headers:{'Content-Type':'application/json',Authorization:`Bearer ${user.token}`}};await api.put(`/orders/${orderId}/status`,{status:newStatus},config);toast.success(`Order status updated to ${newStatus}`);fetchAllOrders();// Refresh the list\n}catch(error){var _error$response2,_error$response2$data;toast.error(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Failed to update status.');}};if(loading)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading all orders...\"});return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px'},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Admin Dashboard - All Orders\"}),orders.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No orders found.\"}):/*#__PURE__*/_jsxs(\"table\",{style:{width:'100%',borderCollapse:'collapse'},children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{style:{borderBottom:'2px solid black',textAlign:'left'},children:[/*#__PURE__*/_jsx(\"th\",{style:{padding:'8px'},children:\"Order ID\"}),/*#__PURE__*/_jsx(\"th\",{style:{padding:'8px'},children:\"User\"}),/*#__PURE__*/_jsx(\"th\",{style:{padding:'8px'},children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{style:{padding:'8px'},children:\"Total\"}),/*#__PURE__*/_jsx(\"th\",{style:{padding:'8px'},children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{style:{padding:'8px'},children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:orders.map(order=>{var _order$userId;return/*#__PURE__*/_jsxs(\"tr\",{style:{borderBottom:'1px solid #ddd'},children:[/*#__PURE__*/_jsx(\"td\",{style:{padding:'8px'},children:order._id}),/*#__PURE__*/_jsx(\"td\",{style:{padding:'8px'},children:((_order$userId=order.userId)===null||_order$userId===void 0?void 0:_order$userId.name)||'N/A'}),/*#__PURE__*/_jsx(\"td\",{style:{padding:'8px'},children:new Date(order.createdAt).toLocaleDateString()}),/*#__PURE__*/_jsxs(\"td\",{style:{padding:'8px'},children:[\"\\u20B9\",order.totalAmount.toFixed(2)]}),/*#__PURE__*/_jsx(\"td\",{style:{padding:'8px',textTransform:'capitalize'},children:order.status}),/*#__PURE__*/_jsx(\"td\",{style:{padding:'8px'},children:/*#__PURE__*/_jsxs(\"select\",{defaultValue:order.status,onChange:e=>handleStatusChange(order._id,e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"pending\",children:\"Pending\"}),/*#__PURE__*/_jsx(\"option\",{value:\"preparing\",children:\"Preparing\"}),/*#__PURE__*/_jsx(\"option\",{value:\"out_for_delivery\",children:\"Out for Delivery\"}),/*#__PURE__*/_jsx(\"option\",{value:\"delivered\",children:\"Delivered\"})]})})]},order._id);})})]})]});};export default AdminDashboard;","map":{"version":3,"names":["React","useState","useEffect","api","toast","jsx","_jsx","jsxs","_jsxs","AdminDashboard","_ref","user","orders","setOrders","loading","setLoading","fetchAllOrders","config","headers","Authorization","token","data","get","error","_error$response","_error$response$data","response","message","role","handleStatusChange","orderId","newStatus","put","status","success","_error$response2","_error$response2$data","children","style","padding","length","width","borderCollapse","borderBottom","textAlign","map","order","_order$userId","_id","userId","name","Date","createdAt","toLocaleDateString","totalAmount","toFixed","textTransform","defaultValue","onChange","e","target","value"],"sources":["C:/Users/LAPZONE/pizza-delivery-app/frontend/src/pages/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from '../api';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst AdminDashboard = ({ user }) => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchAllOrders = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await api.get('/orders', config);\r\n      setOrders(data);\r\n    } catch (error) {\r\n      toast.error(error.response?.data?.message || 'Could not fetch orders.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user && user.user.role === 'admin') {\r\n      fetchAllOrders();\r\n    }\r\n  }, [user]);\r\n\r\n  const handleStatusChange = async (orderId, newStatus) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      await api.put(\r\n        `/orders/${orderId}/status`,\r\n        { status: newStatus },\r\n        config\r\n      );\r\n      toast.success(`Order status updated to ${newStatus}`);\r\n      fetchAllOrders(); // Refresh the list\r\n    } catch (error) {\r\n      toast.error(error.response?.data?.message || 'Failed to update status.');\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Loading all orders...</div>;\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h1>Admin Dashboard - All Orders</h1>\r\n      {orders.length === 0 ? (\r\n        <p>No orders found.</p>\r\n      ) : (\r\n        <table style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n          <thead>\r\n            <tr style={{ borderBottom: '2px solid black', textAlign: 'left' }}>\r\n              <th style={{ padding: '8px' }}>Order ID</th>\r\n              <th style={{ padding: '8px' }}>User</th>\r\n              <th style={{ padding: '8px' }}>Date</th>\r\n              <th style={{ padding: '8px' }}>Total</th>\r\n              <th style={{ padding: '8px' }}>Status</th>\r\n              <th style={{ padding: '8px' }}>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id} style={{ borderBottom: '1px solid #ddd' }}>\r\n                <td style={{ padding: '8px' }}>{order._id}</td>\r\n                <td style={{ padding: '8px' }}>{order.userId?.name || 'N/A'}</td>\r\n                <td style={{ padding: '8px' }}>{new Date(order.createdAt).toLocaleDateString()}</td>\r\n                <td style={{ padding: '8px' }}>â‚¹{order.totalAmount.toFixed(2)}</td>\r\n                <td style={{ padding: '8px', textTransform: 'capitalize' }}>{order.status}</td>\r\n                <td style={{ padding: '8px' }}>\r\n                  <select defaultValue={order.status} onChange={(e) => handleStatusChange(order._id, e.target.value)}>\r\n                    <option value=\"pending\">Pending</option>\r\n                    <option value=\"preparing\">Preparing</option>\r\n                    <option value=\"out_for_delivery\">Out for Delivery</option>\r\n                    <option value=\"delivered\">Delivered</option>\r\n                  </select>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}