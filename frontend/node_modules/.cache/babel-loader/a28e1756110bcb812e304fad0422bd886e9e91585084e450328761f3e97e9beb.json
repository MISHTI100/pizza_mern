{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LAPZONE\\\\pizza-delivery-app\\\\frontend\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register({\n  setUser\n}) {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Get existing users from localStorage\n    const users = JSON.parse(localStorage.getItem(\"fakeUsers\") || \"[]\");\n\n    // Check if email already exists\n    if (users.find(u => u.email === email.trim().toLowerCase())) {\n      toast.error(\"Email already in use!\");\n      return;\n    }\n\n    // Create new user\n    const newUser = {\n      id: Date.now(),\n      name: name.trim(),\n      email: email.trim().toLowerCase(),\n      password: password.trim()\n    };\n    users.push(newUser);\n    localStorage.setItem(\"fakeUsers\", JSON.stringify(users));\n\n    // Set user in App.js state\n    setUser(newUser);\n    toast.success(\"Registered successfully!\");\n    navigate(\"/\"); // redirect to home\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      maxWidth: \"400px\",\n      margin: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true,\n          style: {\n            width: \"100%\",\n            padding: \"8px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true,\n          style: {\n            width: \"100%\",\n            padding: \"8px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true,\n          style: {\n            width: \"100%\",\n            padding: \"8px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          width: \"100%\",\n          padding: \"10px\",\n          backgroundColor: \"#28a745\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"5px\"\n        },\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"uy8hlqLdG6mnjit0vGPsCTKWCQs=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","toast","jsxDEV","_jsxDEV","Register","setUser","_s","name","setName","email","setEmail","password","setPassword","navigate","handleSubmit","e","preventDefault","users","JSON","parse","localStorage","getItem","find","u","trim","toLowerCase","error","newUser","id","Date","now","push","setItem","stringify","success","style","padding","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","marginBottom","type","value","onChange","target","required","width","backgroundColor","color","border","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/LAPZONE/pizza-delivery-app/frontend/src/pages/Register.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function Register({ setUser }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Get existing users from localStorage\r\n    const users = JSON.parse(localStorage.getItem(\"fakeUsers\") || \"[]\");\r\n\r\n    // Check if email already exists\r\n    if (users.find((u) => u.email === email.trim().toLowerCase())) {\r\n      toast.error(\"Email already in use!\");\r\n      return;\r\n    }\r\n\r\n    // Create new user\r\n    const newUser = {\r\n      id: Date.now(),\r\n      name: name.trim(),\r\n      email: email.trim().toLowerCase(),\r\n      password: password.trim(),\r\n    };\r\n\r\n    users.push(newUser);\r\n    localStorage.setItem(\"fakeUsers\", JSON.stringify(users));\r\n\r\n    // Set user in App.js state\r\n    setUser(newUser);\r\n\r\n    toast.success(\"Registered successfully!\");\r\n    navigate(\"/\"); // redirect to home\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\", maxWidth: \"400px\", margin: \"auto\" }}>\r\n      <h1>Register</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div style={{ marginBottom: \"1rem\" }}>\r\n          <label>Name</label>\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n            style={{ width: \"100%\", padding: \"8px\" }}\r\n          />\r\n        </div>\r\n        <div style={{ marginBottom: \"1rem\" }}>\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n            style={{ width: \"100%\", padding: \"8px\" }}\r\n          />\r\n        </div>\r\n        <div style={{ marginBottom: \"1rem\" }}>\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n            style={{ width: \"100%\", padding: \"8px\" }}\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          style={{\r\n            width: \"100%\",\r\n            padding: \"10px\",\r\n            backgroundColor: \"#28a745\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            borderRadius: \"5px\",\r\n          }}\r\n        >\r\n          Register\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}