{"ast":null,"code":"import React,{useState,useEffect}from'react';import{BrowserRouter as Router,Routes,Route}from'react-router-dom';import{ToastContainer,toast}from'react-toastify';import'react-toastify/dist/ReactToastify.css';import Navbar from'./components/Navbar';import Home from'./pages/Home';import Cart from'./components/Cart';import CustomPizza from'./pages/CustomPizza';import Checkout from'./pages/Checkout';import Login from'./pages/Login';import Register from'./pages/Register';import VerifyEmail from'./pages/VerifyEmail';import ForgotPassword from'./pages/ForgotPassword';import ResetPassword from'./pages/ResetPassword';import MyOrders from'./pages/MyOrders';import AdminDashboard from'./pages/AdminDashboard';import AdminRoute from'./components/AdminRoute';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[cart,setCart]=useState([]);const[user,setUser]=useState(null);useEffect(()=>{// Check local storage for user info on initial load\nconst userInfo=localStorage.getItem('userInfo');if(userInfo){try{setUser(JSON.parse(userInfo));}catch(error){console.error('Failed to parse user info from local storage',error);localStorage.removeItem('userInfo');}}},[]);const addToCart=pizzaToAdd=>{// A unique identifier for a cart item is its database ID plus its size\nconst cartId=pizzaToAdd._id+'-'+pizzaToAdd.size;const existingPizza=cart.find(pizza=>pizza.cartId===cartId);if(existingPizza){setCart(cart.map(pizza=>pizza.cartId===cartId?{...pizza,quantity:pizza.quantity+1}:pizza));toast.info(`Increased ${pizzaToAdd.name} quantity in cart!`);}else{// Add the new item with a cartId and initial quantity\nsetCart([...cart,{...pizzaToAdd,cartId:cartId,quantity:1}]);toast.success(`${pizzaToAdd.name} added to cart!`);}};const addCustomPizzaToCart=customPizza=>{const newPizzaId=`custom-${Date.now()}`;const newPizza={_id:newPizzaId,// Unique ID for client-side state\ncartId:newPizzaId,// Ensure a unique key for the cart\nname:`Custom Pizza (${customPizza.base}, ${customPizza.sauce})`,...customPizza,price:14.99,// Example base price for a custom pizza\nquantity:1,isCustom:true// Flag to identify custom pizzas in the cart\n};setCart([...cart,newPizza]);toast.success(\"Your custom pizza has been added to the cart!\");};const logoutHandler=()=>{localStorage.removeItem('userInfo');setUser(null);setCart([]);// Optional: clear cart on logout\ntoast.info(\"You have been logged out.\");};return/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(ToastContainer,{position:\"top-right\",autoClose:3000,hideProgressBar:false,newestOnTop:false,closeOnClick:true,rtl:false,pauseOnFocusLoss:true,draggable:true,pauseOnHover:true}),/*#__PURE__*/_jsx(Navbar,{user:user,logoutHandler:logoutHandler}),/*#__PURE__*/_jsx(\"main\",{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Home,{addToCart:addToCart})}),/*#__PURE__*/_jsx(Route,{path:\"/cart\",element:/*#__PURE__*/_jsx(Cart,{cart:cart,setCart:setCart})}),/*#__PURE__*/_jsx(Route,{path:\"/checkout\",element:/*#__PURE__*/_jsx(Checkout,{cart:cart,user:user,setCart:setCart})}),/*#__PURE__*/_jsx(Route,{path:\"/custom\",element:/*#__PURE__*/_jsx(CustomPizza,{addCustomPizzaToCart:addCustomPizzaToCart})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(Login,{setUser:setUser})}),/*#__PURE__*/_jsx(Route,{path:\"/register\",element:/*#__PURE__*/_jsx(Register,{})}),/*#__PURE__*/_jsx(Route,{path:\"/verify\",element:/*#__PURE__*/_jsx(VerifyEmail,{})}),/*#__PURE__*/_jsx(Route,{path:\"/forgot-password\",element:/*#__PURE__*/_jsx(ForgotPassword,{})}),/*#__PURE__*/_jsx(Route,{path:\"/reset-password\",element:/*#__PURE__*/_jsx(ResetPassword,{})}),/*#__PURE__*/_jsx(Route,{path:\"/my-orders\",element:/*#__PURE__*/_jsx(MyOrders,{user:user})}),/*#__PURE__*/_jsx(Route,{path:\"/admin\",element:/*#__PURE__*/_jsx(AdminRoute,{user:user}),children:/*#__PURE__*/_jsx(Route,{path:\"dashboard\",element:/*#__PURE__*/_jsx(AdminDashboard,{user:user})})})]})})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","ToastContainer","toast","Navbar","Home","Cart","CustomPizza","Checkout","Login","Register","VerifyEmail","ForgotPassword","ResetPassword","MyOrders","AdminDashboard","AdminRoute","jsx","_jsx","jsxs","_jsxs","App","cart","setCart","user","setUser","userInfo","localStorage","getItem","JSON","parse","error","console","removeItem","addToCart","pizzaToAdd","cartId","_id","size","existingPizza","find","pizza","map","quantity","info","name","success","addCustomPizzaToCart","customPizza","newPizzaId","Date","now","newPizza","base","sauce","price","isCustom","logoutHandler","children","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","path","element"],"sources":["C:/Users/LAPZONE/pizza-delivery-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Navbar from './components/Navbar';\nimport Home from './pages/Home';\nimport Cart from './components/Cart';\nimport CustomPizza from './pages/CustomPizza';\nimport Checkout from './pages/Checkout';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport VerifyEmail from './pages/VerifyEmail';\nimport ForgotPassword from './pages/ForgotPassword';\nimport ResetPassword from './pages/ResetPassword';\nimport MyOrders from './pages/MyOrders';\nimport AdminDashboard from './pages/AdminDashboard';\nimport AdminRoute from './components/AdminRoute';\n\nfunction App() {\n  const [cart, setCart] = useState([]);\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    // Check local storage for user info on initial load\n    const userInfo = localStorage.getItem('userInfo');\n    if (userInfo) {\n      try {\n        setUser(JSON.parse(userInfo));\n      } catch (error) {\n        console.error('Failed to parse user info from local storage', error);\n        localStorage.removeItem('userInfo');\n      }\n    }\n  }, []);\n\n  const addToCart = (pizzaToAdd) => {\n    // A unique identifier for a cart item is its database ID plus its size\n    const cartId = pizzaToAdd._id + '-' + pizzaToAdd.size;\n\n    const existingPizza = cart.find((pizza) => pizza.cartId === cartId);\n\n    if (existingPizza) {\n      setCart(\n        cart.map((pizza) =>\n          pizza.cartId === cartId\n            ? { ...pizza, quantity: pizza.quantity + 1 }\n            : pizza\n        )\n      );\n      toast.info(`Increased ${pizzaToAdd.name} quantity in cart!`);\n    } else {\n      // Add the new item with a cartId and initial quantity\n      setCart([...cart, { ...pizzaToAdd, cartId: cartId, quantity: 1 }]);\n      toast.success(`${pizzaToAdd.name} added to cart!`);\n    }\n  };\n\n  const addCustomPizzaToCart = (customPizza) => {\n    const newPizzaId = `custom-${Date.now()}`;\n    const newPizza = {\n      _id: newPizzaId, // Unique ID for client-side state\n      cartId: newPizzaId, // Ensure a unique key for the cart\n      name: `Custom Pizza (${customPizza.base}, ${customPizza.sauce})`,\n      ...customPizza,\n      price: 14.99, // Example base price for a custom pizza\n      quantity: 1,\n      isCustom: true, // Flag to identify custom pizzas in the cart\n    };\n\n    setCart([...cart, newPizza]);\n    toast.success(\"Your custom pizza has been added to the cart!\");\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('userInfo');\n    setUser(null);\n    setCart([]); // Optional: clear cart on logout\n    toast.info(\"You have been logged out.\");\n  };\n\n  return (\n    <Router>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={3000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n      <Navbar user={user} logoutHandler={logoutHandler} />\n      <main>\n        <Routes>\n          <Route path=\"/\" element={<Home addToCart={addToCart} />} />\n          <Route path=\"/cart\" element={<Cart cart={cart} setCart={setCart} />} />\n          <Route path=\"/checkout\" element={<Checkout cart={cart} user={user} setCart={setCart} />} />\n          <Route path=\"/custom\" element={<CustomPizza addCustomPizzaToCart={addCustomPizzaToCart} />} />\n          <Route path=\"/login\" element={<Login setUser={setUser} />} />\n          <Route path=\"/register\" element={<Register />} />\n          <Route path=\"/verify\" element={<VerifyEmail />} />\n          <Route path=\"/forgot-password\" element={<ForgotPassword />} />\n          <Route path=\"/reset-password\" element={<ResetPassword />} />\n          <Route path=\"/my-orders\" element={<MyOrders user={user} />} />\n\n          {/* Admin Routes */}\n          <Route path=\"/admin\" element={<AdminRoute user={user} />}>\n            <Route path=\"dashboard\" element={<AdminDashboard user={user} />} />\n            {/* You can add other admin routes like /admin/users here */}\n          </Route>\n        </Routes>\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}